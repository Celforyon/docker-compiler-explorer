#!/bin/bash

compiler=$(echo $(basename "$0")|/usr/bin/cut -d'.' -f2-)
_dir=$(readlink -f $(dirname "$0"))
_bin="${_dir}/${compiler}"

if [ ! -f "${_bin}" ] || [ ! -x "${_bin}" ]; then
	_bin="${compiler}"
fi

if [ "$1" == "--version" ]; then
	ver=$(eval "${_bin} 2>/dev/null --version")
	if [ $? -ne 0 ]; then
		echo "${compiler}"
	else
		echo "${ver}"
	fi
	exit 0
fi

function escape() {
	local data size out i c
	data=$*
	size=${#data}
	out=

	i=0
	while [ ${i} -lt ${size} ]; do
		c=${data:${i}:1}
		if [ ${c} = '\' ]; then
			i=$((i+1))
			if [ ${i} -lt ${size} ]; then
				c=${data:${i}:1}
				if [ "${c}" = 'n' ]; then
					echo "${out}"
					out=
				else
					out="${out}\\${c}"
				fi
			fi
		else
			out="${out}${c}"
		fi

		i=$((i+1))
	done

	echo -n "${out}"
}

out=$3
exe=1
[ "$4" = "-S" ] && exe=0
shift $((4 - exe))

src=${@:$#}
other=${@:1:$#-1}

input=$(/bin/mktemp)
args=
sepi=
sepa=
isarg=1
for arg in ${other}; do
	if [ "${arg}" = "---" ]; then
		isarg=0
	elif [ "${isarg}" = "1" ]; then
		args="${args}${sepa}${arg}"
		sepa=' '
	else
		echo>>${input} -n "${sepi}"
		escape>>${input} "${arg}"
		sepi=' '
	fi
done

echo "===== args: ${args}"
echo "===== input:"
/bin/cat ${input}
echo
echo "============"

program="${_bin} \"${exe}\" \"${out}\" \"${src}\" \"${input}\" \"<${args}>\""

eval "timeout 10 ${program}"
ret=$?

/bin/rm ${input}

exit "${ret}"
